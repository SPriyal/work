# PEERSIM CHORD

# random.seed 1234567890
simulation.endtime 100
simulation.logtime 100
simulation.experiments 1
simulation.eventqueue PriorityHeap


CPU_CORES 100
ID_LENGTH 19
network.size 2^ID_LENGTH
GENERATOR_STEP 1000
SUCCESSOR_SIZE 1
OBSERVER_STEP  1	#ID_LENGTH/CPU_CORES

#protocol.tr SpecificTransport
#{
#}



protocol.tr UniformRandomTransport
{
	mindelay 1
	maxdelay 1
}

protocol.unretr UnreliableTransport
{
	transport tr
	drop 0
}

protocol.my ChordProtocol
{
	transport unretr
	speed CPU_CORES
}

control.traffic peersim.chord.TrafficGenerator
{
	protocol my
	step GENERATOR_STEP
}

init.create CreateNw 
{
	protocol my
	idLength ID_LENGTH
	succListSize SUCCESSOR_SIZE
}

control.observer MessageCounterObserver
{
	protocol my
	step OBSERVER_STEP
}

/*control.dnet DynamicNetwork
{
	add 20
	add -25
	minsize 3000
	maxsize 7000
	step 100000
	init.0 ChordInitializer
	{      
		protocol my
	}
}
*/